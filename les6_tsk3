"""
Задача3. Реализовать базовый класс Worker (работник),
в котором определить атрибуты: name, surname, position (должность), income (доход).
Последний атрибут должен быть защищенным и ссылаться на словарь,
содержащий элементы: оклад и премия, например, {"wage": wage, "bonus": bonus}.
Создать класс Position (должность) на базе класса Worker.
В классе Position реализовать методы получения полного имени сотрудника (get_full_name)
и дохода с учетом премии (get_total_income). Проверить работу примера на реальных данных
(создать экземпляры класса Position, передать данные, проверить значения атрибутов, вызвать методы экземпляров).
Решение:
"""
class Worker:
    def __init__(self, name, surname, position, wage, bonus):
        self.name = name.title()
        self.surname = surname.title()
        self.position = position
        self.wage = wage
        self.bonus = bonus
        self._income = {"wage": self.wage, "bonus": self.bonus}

class Position(Worker):
    def get_full_name(self):
        return f'полное имя сотрудника: {self.name} {self.surname}'

    def get_total_income(self):
        result = self.wage + self.bonus
        return f'доход с учетом премии: {result}'

worker_1 = Position('Ivan', 'Petrov', 'engineer', 50000, 5000)
print(worker_1.get_full_name())
print(worker_1.get_total_income())
print(worker_1._income)
